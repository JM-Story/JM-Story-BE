name: Deploy FastAPI via CodeDeploy

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-2
  STAGE: dev
  PROJECT: jm-story

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Fetch deployment parameters from SSM
        id: ssm
        run: |
          ECR_URI=$(aws ssm get-parameter --name "/${{ env.PROJECT }}/${{ env.STAGE }}/ECR_URI" --query "Parameter.Value" --output text)
          APP_NAME=$(aws ssm get-parameter --name "/${{ env.PROJECT }}/${{ env.STAGE }}/CODEDEPLOY_APP" --query "Parameter.Value" --output text)
          DEPLOY_GROUP=$(aws ssm get-parameter --name "/${{ env.PROJECT }}/${{ env.STAGE }}/CODEDEPLOY_GROUP" --query "Parameter.Value" --output text)
          S3_BUCKET=$(aws ssm get-parameter --name "/${{ env.PROJECT }}/${{ env.STAGE }}/S3_DEPLOY_BUCKET" --query "Parameter.Value" --output text)

          echo "ecr_uri=$ECR_URI" >> $GITHUB_OUTPUT
          echo "app_name=$APP_NAME" >> $GITHUB_OUTPUT
          echo "deploy_group=$DEPLOY_GROUP" >> $GITHUB_OUTPUT
          echo "s3_bucket=$S3_BUCKET" >> $GITHUB_OUTPUT

      - name: Log in to ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} \
          | docker login --username AWS --password-stdin ${{ steps.ssm.outputs.ecr_uri }}

      - name: Build Docker image
        run: |
          docker build --build-arg DATABASE_URL="${{ secrets.DATABASE_URL }}" -t ${{ steps.ssm.outputs.ecr_uri }}:latest .

      - name: Push Docker image to ECR
        run: |
          docker push ${{ steps.ssm.outputs.ecr_uri }}:latest

      - name: Package deployment bundle (appspec.yml + scripts)
        run: |
          zip -r deploy.zip appspec.yml scripts/

      - name: Upload to S3
        run: |
          aws s3 cp deploy.zip s3://${{ steps.ssm.outputs.s3_bucket }}/deploy-${{ github.sha }}.zip

      - name: Deploy via CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name ${{ steps.ssm.outputs.app_name }} \
            --deployment-group-name ${{ steps.ssm.outputs.deploy_group }} \
            --s3-location bucket=${{ steps.ssm.outputs.s3_bucket }},key=deploy-${{ github.sha }}.zip,bundleType=zip \
            --file-exists-behavior OVERWRITE \
            --deployment-config-name CodeDeployDefault.AllAtOnce
